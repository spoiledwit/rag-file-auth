# Generated by Django 5.2.4 on 2025-07-24 07:47

import cloudinary.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CategorySchema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Category Schema',
                'verbose_name_plural': 'Category Schemas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MLReferenceFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ml_reference_id', models.CharField(max_length=50, unique=True)),
                ('file', cloudinary.models.CloudinaryField(max_length=255, verbose_name='reference_file')),
                ('file_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('reasoning_notes', models.TextField(help_text='Why this file is a good reference for this category')),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata like document_type, region, issue_year')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ml_reference_files', to='api.categoryschema')),
                ('uploaded_by', models.ForeignKey(limit_choices_to={'userprofile__role': 'admin'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ML Reference File',
                'verbose_name_plural': 'ML Reference Files',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='SubmittedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_id', models.CharField(max_length=50)),
                ('file', cloudinary.models.CloudinaryField(max_length=255, verbose_name='submitted_file')),
                ('file_name', models.CharField(max_length=255)),
                ('category', models.CharField(help_text='Original category submitted by user', max_length=100)),
                ('final_category', models.CharField(blank=True, help_text='Final category after AI analysis (may differ from original)', max_length=100)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('accuracy_score', models.FloatField(blank=True, help_text='Accuracy score from 0-100', null=True)),
                ('match', models.CharField(blank=True, choices=[('Y', 'Yes'), ('N', 'No')], help_text='Y if accuracy >= threshold, N if below', max_length=1)),
                ('extracted_fields', models.JSONField(blank=True, default=dict, help_text='OCR extracted data like names, dates, numbers')),
                ('status', models.CharField(choices=[('pending', 'Pending Analysis'), ('processing', 'Being Processed'), ('completed', 'Analysis Complete'), ('failed', 'Processing Failed')], default='pending', max_length=20)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('uploaded_by', models.ForeignKey(limit_choices_to={'userprofile__role': 'user'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Submitted File',
                'verbose_name_plural': 'Submitted Files',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('upload', 'File Upload'), ('analysis', 'AI Analysis'), ('re-categorization', 'Category Change'), ('login', 'User Login'), ('admin_action', 'Admin Action')], max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.JSONField(default=dict, help_text='Additional details like from_category, to_category, error_info')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('ml_reference_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.mlreferencefile')),
                ('submitted_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.submittedfile')),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('user', 'Portal User'), ('admin', 'Client Admin')], default='user', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
    ]
